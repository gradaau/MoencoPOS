@model MoencoPOS.Models.Register

@{
    Layout = "~/Views/Shared/NewTheme _MainLayout_Sidebar.cshtml";
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Register User</title>
</head>
<body>

    <div class="row">
        <div class="col-md-11">
            <div class="portlet light bordered">
                <div class="portlet-title">
                    <div class="caption font-green-sharp">
                        <i class="icon-list font-green-sharp"></i>
                        <span class="caption-subject bold uppercase">Register User</span>
                    </div>
                    <div class="tools">
                        <a href="#" class="collapse" data-original-title="" title=""></a>
                    </div>
                    <div class="actions">
                        <a class="btn green btn-sm" data-buttontype="btn_save" onclick="javascript: document.getElementById('frm_register_user').submit()" data-submittedform="frm_register_user"><span class="fa fa-save"></span> Save</a>
                        <a class="btn red btn-sm" href="@Url.Action("Users", "Account")"><span class="fa fa-times-circle"></span> Cancel</a>
                        <a class="btn btn-icon-only btn-default fullscreen"></a>
                    </div>
                </div>
                <div class="portlet-body row">
                    @using (Html.BeginForm("Register", "Account", FormMethod.Post, new { id = "frm_register_user", @class = "form-horizontal" }))
                    {
                        @Html.AntiForgeryToken();
                        <div class="col-md-offset-1 col-md-6">
                            <div class="form-group">
                                @Html.LabelFor(m => m.UserName, new { @class = "col-sm-4 control-label" })
                                <div class="col-sm-8">
                                    @Html.TextBoxFor(m => m.UserName, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(m => m.Password, new { @class = "col-sm-4 control-label" })
                                <div class="col-sm-8">
                                    @Html.PasswordFor(model => model.Password, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(m => m.ConfirmPassword, new { @class = "col-sm-4 control-label" })
                                <div class="col-sm-8">
                                    @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(m => m.Email, new { @class = "col-sm-4 control-label" })
                                <div class="col-sm-8">
                                    @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(m => m.FullName, new { @class = "col-sm-4 control-label" })
                                <div class="col-sm-8">
                                    @Html.TextBoxFor(model => model.FullName, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.FullName, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(m => m.BirthDate, new { @class = "col-sm-4 control-label" })
                                <div class="col-sm-8">
                                    @Html.TextBoxFor(m => m.BirthDate, new { @class = "form-control datepicker" })
                                    @Html.ValidationMessageFor(model => model.BirthDate, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(m => m.Bio, new { @class = "col-sm-4 control-label" })
                                <div class="col-sm-8">
                                    @Html.TextBoxFor(m => m.Bio, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.Bio, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(m => m.BranchId, new { @class = "col-sm-4 control-label" })
                                <div class="col-sm-8">
                                    @Html.DropDownList("BranchList")
                                    @Html.ValidationMessageFor(model => model.BranchId, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(m => m.Role, new { @class = "col-sm-4 control-label" })
                                <div class="col-sm-8">
                                    @Html.DropDownList("RoleList")
                                    @Html.ValidationMessageFor(model => model.Role, "", new { @class = "text-danger" })

                                </div>
                            </div>
                        </div>
                    }
                    <div>@ViewBag.Message</div>
                    
                </div>
            </div>
        </div>
    </div>
</body>
</html>

