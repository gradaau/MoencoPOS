@model MoencoPOS.Models.Productc
@using MoencoPOS.Security;
@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/NewTheme _MainLayout_Sidebar.cshtml";
    var user = (MyIdentityUser)HttpContext.Current.Session["USER_INFO"];
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Edit Product</title>
</head>
<body>

    <div class="row">
        <div class="col-md-11">
            <div class="portlet light bordered">
                <div class="portlet-title">
                    <div class="caption font-green-sharp">
                        <i class="icon-list font-green-sharp"></i>
                        <span class="caption-subject bold uppercase">Edit Product</span>
                    </div>
                    <div class="tools">
                        <a href="#" class="collapse" data-original-title="" title=""></a>
                    </div>
                    <div class="actions">
                        <a class="btn green btn-sm" data-buttontype="btn_save" onclick="javascript: document.getElementById('frm_edit_product').submit()" data-submittedform="frm_edit_product"><span class="fa fa-save"></span> Save</a>
                        <a class="btn red btn-sm" href="@Url.Action("Index", "Productcs")"><span class="fa fa-times-circle"></span> Cancel</a>
                        <a class="btn btn-icon-only btn-default fullscreen"></a>
                    </div>
                </div>
                <div class="portlet-body row">
                    @using (Html.BeginForm("Edit", "Productcs", FormMethod.Post, new { id = "frm_edit_product", @class = "form-horizontal" }))
                    {
                        @Html.AntiForgeryToken();
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        @Html.HiddenFor(model => model.ProductcId)
                        <div class="col-md-offset-1 col-md-6">
                            <div class="form-group">
                                @Html.LabelFor(m => m.ProductName, new { @class = "col-sm-4 control-label" })
                                <div class="col-sm-8">
                                    @Html.TextBoxFor(m => m.ProductName, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.ProductName, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(m => m.ProductDescription, new { @class = "col-sm-4 control-label" })
                                <div class="col-sm-8">
                                    @Html.TextBoxFor(m => m.ProductDescription, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.ProductDescription, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(m => m.Model, new { @class = "col-sm-4 control-label" })
                                <div class="col-sm-8">
                                    @Html.TextBoxFor(m => m.Model, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.Model, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(m => m.UnitOfMeasure, new { @class = "col-sm-4 control-label" })
                                <div class="col-sm-8">
                                    @Html.TextBoxFor(m => m.UnitOfMeasure, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.UnitOfMeasure, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(m => m.UnitCost, new { @class = "col-sm-4 control-label" })
                                <div class="col-sm-8">
                                    @Html.TextBoxFor(m => m.UnitCost, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.UnitCost, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(m => m.UnitPrice, new { @class = "col-sm-4 control-label" })
                                <div class="col-sm-8">
                                    @Html.TextBoxFor(m => m.UnitPrice, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.UnitPrice, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.CategoryId, "CategoryId", htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-8">
                                    @Html.DropDownList("CategoryId", null, htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    }
                    @ViewBag.Message
                </div>
            </div>
        </div>
    </div>
</body>
</html>